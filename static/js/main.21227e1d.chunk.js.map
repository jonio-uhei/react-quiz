{"version":3,"sources":["components/Answer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Answer","handleAnswerButtonClick","questions","currentQuestion","questionText","answerOptions","map","answerOption","key","onClick","isCorrect","answerText","App","useState","setCurrentQuestion","showScore","setShowScore","score","setScore","className","class","alert","nextQuestion","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAqBeA,EAnBI,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,wBAAwBC,EAA8B,EAA9BA,UAAUC,EAAoB,EAApBA,gBAC/C,OACI,qCACI,2DACA,+BAAI,iDAAgB,uBAApB,gBAAiCD,EAAUC,GAAiBC,gBAC5D,6BAEIF,EAAUC,GAAiBE,cAAcC,KAAI,SAACC,EAAaC,GAAd,OACzC,oBAEIC,QAAS,kBAAIR,EAAwBM,EAAaG,YAFtD,SAEmEH,EAAaI,YADvEH,YCkElBI,MA1Ef,WAEE,IAAMV,EAAW,CACf,CACEE,aAAa,2EACbC,cAAc,CACZ,CAACM,WAAW,2BAAOD,WAAU,GAC7B,CAACC,WAAW,2BAAOD,WAAU,GAC7B,CAACC,WAAW,sBAAOD,WAAU,KAGjC,CACEN,aAAa,2HACbC,cAAc,CACZ,CAACM,WAAW,WAAWD,WAAU,GACjC,CAACC,WAAW,aAAaD,WAAU,GACnC,CAACC,WAAW,OAAOD,WAAU,KAGjC,CACEN,aAAa,mFACbC,cAAc,CACZ,CAACM,WAAW,SAASD,WAAU,GAC/B,CAACC,WAAW,iCAAQD,WAAU,GAC9B,CAACC,WAAW,qBAAMD,WAAU,MAxBrB,EA6BgCG,mBAAS,GA7BzC,mBA6BNV,EA7BM,KA6BUW,EA7BV,OA+BoBD,oBAAS,GA/B7B,mBA+BNE,EA/BM,KA+BIC,EA/BJ,OAiCYH,mBAAS,GAjCrB,mBAiCNI,EAjCM,KAiCAC,EAjCA,KAsDb,OAEE,qBAAKC,UAAU,MAAf,SAEIJ,EACE,4EAAW,uBAAS,uBAAMK,MAAM,UAAZ,0BAA0BH,EAA1B,YAApB,8BAIA,cAAC,EAAD,CACEhB,wBA7BsB,SAACS,IAEd,IAAdA,GACDW,MAAM,4BACNH,EAASD,EAAM,IAEfI,MAAM,kCAGR,IAAMC,EAAenB,EAAkB,EAEpCmB,EAAepB,EAAUqB,OAC1BT,EAAmBQ,GAEnBN,GAAa,IAgBPd,UAAWA,EACXC,gBAAiBA,OCzDdqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.21227e1d.chunk.js","sourcesContent":["import React from 'react';\n\n    const Answer = ({handleAnswerButtonClick,questions,currentQuestion}) =>{\n        return(\n            <>\n                <h1>3択クイズ</h1>\n                <h2><span>第1問</span><br></br>問題:{questions[currentQuestion].questionText}</h2>\n                <ul> \n                {\n                    questions[currentQuestion].answerOptions.map((answerOption,key)=>(\n                        <li \n                            key={key}\n                            onClick={()=>handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}\n                        </li>)\n                    )\n                }\n                </ul>\n            </>\n        );\n    };\n\nexport default Answer;","import React,{useState} from 'react';\nimport Answer from './components/Answer';\n\nfunction App() {\n\n  const questions =[\n    {\n      questionText:'数学Ⅲで一番難しい分野は',\n      answerOptions:[\n        {answerText:'微分積分',isCorrect:true},\n        {answerText:'ベクトル',isCorrect:false},\n        {answerText:'2次曲線',isCorrect:false},\n      ],\n    },\n    {\n      questionText:'この中で難易度が低いプログラミング言語は',\n      answerOptions:[\n        {answerText:'React.js',isCorrect:false},\n        {answerText:'Angular.js',isCorrect:false},\n        {answerText:'HTML',isCorrect:true},\n      ],\n    },\n    {\n      questionText:'この中でYouTuberのゲーム実況者は',\n      answerOptions:[\n        {answerText:'Taiman',isCorrect:false},\n        {answerText:'ガッチマン',isCorrect:true},\n        {answerText:'ハクア',isCorrect:false},\n      ],\n    },\n  ];\n\n  const [currentQuestion,setCurrentQuestion] = useState(0);\n\n  const [showScore,setShowScore] = useState(false);\n\n  const [score,setScore] = useState(0);\n\n  const handleAnswerButtonClick = (isCorrect) => {\n\n    if(isCorrect === true){\n      alert('正解です');\n      setScore(score+1);\n    }else{\n      alert('不正解です');\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if(nextQuestion < questions.length){\n      setCurrentQuestion(nextQuestion);\n    }else{\n      setShowScore(true);\n\n    }\n  }\n\n  return (\n\n    <div className=\"App\">\n      {\n        showScore ? (\n          <p>お疲れ様でした!<br></br><span class=\"correct\">3問中{score}問</span>正解です</p>\n        )\n        :\n        (\n          <Answer\n            handleAnswerButtonClick={handleAnswerButtonClick}\n            questions={questions}\n            currentQuestion={currentQuestion}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}